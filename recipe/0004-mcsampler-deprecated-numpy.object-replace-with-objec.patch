From ea2dc03e117abd80a5283cb87e16d3c2a345e2f3 Mon Sep 17 00:00:00 2001
From: "richard.oshaughnessy" <richard.oshaughnessy@ligo.org>
Date: Wed, 3 May 2023 10:30:04 -0400
Subject: [PATCH 4/4] mcsampler: deprecated numpy.object, replace with object.
 (Probably simply want to use dtype=np.float64 .... we are not supporting
 typle return values)

(cherry picked from commit 98761d55360c85459628bb71ae23ae5af2a51cbe)
---
 MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsampler.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsampler.py b/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsampler.py
index 4b715abd..73d4a1ec 100644
--- a/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsampler.py
+++ b/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsampler.py
@@ -219,7 +219,7 @@ class MCSampler(object):
             # FIXME: UGH! Really? This was the most elegant thing you could come
             # up with?
             rvs_tmp = [numpy.random.uniform(0,1,(len(p), int(rvs))) for p in [(i,) if not isinstance(i, tuple) else i for i in args]]
-            rvs_tmp = numpy.array([self.cdf_inv[param](*rv) for (rv, param) in zip(rvs_tmp, args)], dtype=numpy.object)
+            rvs_tmp = numpy.array([self.cdf_inv[param](*rv) for (rv, param) in zip(rvs_tmp, args)], dtype=object)
         else:
             rvs_tmp = numpy.array(rvs)
 
-- 
2.40.0

