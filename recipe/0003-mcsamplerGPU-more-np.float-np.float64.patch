From f1e2ed8f02a5f4565a68fa48233a8c5f3d9f1df8 Mon Sep 17 00:00:00 2001
From: "richard.oshaughnessy" <richard.oshaughnessy@ligo.org>
Date: Wed, 3 May 2023 07:41:01 -0400
Subject: [PATCH 3/4] mcsamplerGPU: more np.float -> np.float64

(cherry picked from commit 7956a9a092c0617f82f757ee194c05b9a0b599f0)
---
 .../Code/RIFT/integrators/mcsamplerGPU.py                 | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsamplerGPU.py b/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsamplerGPU.py
index 8a38d224..79db5924 100644
--- a/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsamplerGPU.py
+++ b/MonteCarloMarginalizeCode/Code/RIFT/integrators/mcsamplerGPU.py
@@ -1360,18 +1360,18 @@ def M_samp_vector(Mmin,Mmax,x):
 def pseudo_dist_samp(r0,r):
         return r*r*numpy.exp( - (r0/r)*(r0/r)/2. + r0/r)+0.01  # put a floor on probability, so we converge. Note this floor only cuts out NEARBY distances
 
-#pseudo_dist_samp_vector = numpy.vectorize(pseudo_dist_samp,excluded=['r0'],otypes=[numpy.float])
-pseudo_dist_samp_vector = numpy.vectorize(pseudo_dist_samp,otypes=[numpy.float])
+#pseudo_dist_samp_vector = numpy.vectorize(pseudo_dist_samp,excluded=['r0'],otypes=[numpy.float64])
+pseudo_dist_samp_vector = numpy.vectorize(pseudo_dist_samp,otypes=[numpy.float64])
 
 def delta_func_pdf(x_0, x):
     return 1.0 if x == x_0 else 0.0
 
-delta_func_pdf_vector = numpy.vectorize(delta_func_pdf, otypes=[numpy.float])
+delta_func_pdf_vector = numpy.vectorize(delta_func_pdf, otypes=[numpy.float64])
 
 def delta_func_samp(x_0, x):
     return x_0
 
-delta_func_samp_vector = numpy.vectorize(delta_func_samp, otypes=[numpy.float])
+delta_func_samp_vector = numpy.vectorize(delta_func_samp, otypes=[numpy.float64])
 
 
 
-- 
2.40.0

